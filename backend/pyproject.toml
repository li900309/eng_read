[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "eng-read-backend"
version = "1.0.0"
description = "英语阅读学习平台后端API服务"
authors = [
    {name = "Eng Read Team", email = "team@engread.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["flask", "api", "learning", "vocabulary", "education"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Flask",
    "Topic :: Education",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    # Flask Web框架
    "Flask>=2.3.3,<3.0.0",
    "Werkzeug>=2.3.7,<3.0.0",
    "click>=8.1.7,<9.0.0",
    "itsdangerous>=2.1.2,<3.0.0",
    "Jinja2>=3.1.2,<4.0.0",
    "MarkupSafe>=2.1.3,<3.0.0",

    # 数据库相关
    "Flask-SQLAlchemy>=3.0.5,<4.0.0",
    "Flask-Migrate>=4.0.5,<5.0.0",
    "SQLAlchemy>=2.0.21,<3.0.0",
    "psycopg2-binary>=2.9.7,<3.0.0",

    # 认证和安全
    "Flask-JWT-Extended>=4.5.3,<5.0.0",
    "PyJWT>=2.8.0,<3.0.0",
    "cryptography>=41.0.4,<42.0.0",

    # CORS和API支持
    "Flask-CORS>=4.0.0,<5.0.0",
    "Flask-RESTful>=0.3.10,<1.0.0",
    "marshmallow>=3.20.1,<4.0.0",
    "Flask-Marshmallow>=0.15.0,<1.0.0",
    "marshmallow-sqlalchemy>=0.29.0,<1.0.0",

    # 缓存
    "Flask-Caching>=2.1.0,<3.0.0",
    "redis>=5.0.0,<6.0.0",

    # 限流
    "Flask-Limiter>=3.5.0,<4.0.0",

    # 配置管理
    "python-dotenv>=1.0.0,<2.0.0",

    # 日期时间处理
    "python-dateutil>=2.8.2,<3.0.0",

    # HTTP请求
    "requests>=2.31.0,<3.0.0",

    # 数据验证
    "email-validator>=2.0.0,<3.0.0",

    # 文件处理
    "Pillow>=10.0.1,<11.0.0",

    # 性能监控
    "psutil>=5.9.5,<6.0.0",

    # 数据分析
    "numpy>=1.25.2,<2.0.0",
]

[project.optional-dependencies]
dev = [
    # 测试框架
    "pytest>=7.4.2,<8.0.0",
    "pytest-flask>=1.2.0,<2.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.11.1,<4.0.0",
    "pytest-xdist>=3.3.1,<4.0.0",
    "pytest-benchmark>=4.0.0,<5.0.0",

    # 调试工具
    "Flask-DebugToolbar>=0.13.1,<1.0.0",
    "ipython>=8.15.0,<9.0.0",
    "ipdb>=0.13.13,<1.0.0",
    "watchdog>=3.0.0,<4.0.0",

    # 代码质量
    "black>=24.0.0,<25.0.0",
    "flake8>=6.1.0,<7.0.0",
    "isort>=5.12.0,<6.0.0",
    "mypy>=1.5.1,<2.0.0",
    "pylint>=2.17.7,<3.0.0",
    "pycodestyle>=2.11.1,<3.0.0",
    "autopep8>=2.0.4,<3.0.0",
    "vulture>=2.7,<3.0.0",

    # 类型检查
    "types-requests>=2.31.0.2,<3.0.0",
    "types-PyYAML>=6.0.12.12,<7.0.0",

    # 安全检查
    "bandit>=1.7.5,<2.0.0",
    "safety>=3.0.0,<4.0.0",
    "pip-audit>=2.6.1,<3.0.0",

    # 文档生成
    "Sphinx>=7.2.6,<8.0.0",
    "sphinx-rtd-theme>=1.3.0,<2.0.0",

    # 数据工厂（测试数据生成）
    "factory-boy>=3.3.0,<4.0.0",
    "faker>=19.6.2,<20.0.0",

    # API文档
    "Flask-RESTX>=1.1.0,<2.0.0",
    "flasgger>=0.9.7.1,<1.0.0",

    # 性能分析
    "py-spy>=0.3.14,<1.0.0",
    "memory-profiler>=0.61.0,<1.0.0",

    # 预提交钩子
    "pre-commit>=3.4.0,<4.0.0",

    # 环境管理
    "python-decouple>=3.8,<4.0.0",

    # 性能监控
    "sentry-sdk[flask]>=1.32.0,<2.0.0",

    # 代码覆盖率增强
    "coverage>=7.3.2,<8.0.0",
]

production = [
    # 生产服务器
    "gunicorn>=21.2.0,<22.0.0",
]

[project.urls]
Homepage = "https://github.com/eng-read/backend"
Documentation = "https://eng-read.readthedocs.io"
Repository = "https://github.com/eng-read/backend.git"
Issues = "https://github.com/eng-read/backend/issues"

[project.scripts]
eng-read = "run:main"

[dependency-groups]
dev = [
    "pytest>=7.4.2",
    "black>=24.0.0",
    "flake8>=6.1.0",
    "mypy>=1.5.1",
]

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.black]
line-length = 105
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 105
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["app", "tests"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "flask.*",
    "werkzeug.*",
    "jinja2.*",
    "marshmallow.*",
    "redis.*",
    "psutil.*",
    "PIL.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: 单元测试",
    "integration: 集成测试",
    "slow: 慢速测试",
    "auth: 需要认证的测试",
    "admin: 需要管理员权限的测试",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 105
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "migrations",
    "venv",
    "env",
    ".venv",
    "build",
    "dist",
]

[tool.pylint.messages_control]
disable = [
    "C0330",  # Wrong hanging indentation
    "C0326",  # Bad whitespace
    "R0903",  # Too few public methods
    "R0913",  # Too many arguments
]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]